#read in old hg17 EREFinder results
hs4 <- read.csv(paste0("~EREout/chr4.csv"),skip=1)
hs4 <-subset(hs4,hs4$N>=800 & hs4$mean_Kd_inverse!=-1)
hs12 <- read.csv(paste0("~EREout/chr12.csv"),skip=1)
hs12 <-subset(hs12,hs12$N>=800 & hs12$mean_Kd_inverse!=-1)
hs17 <- read.csv(paste0("~EREout/chr17.csv"),skip=1)
hs17 <-subset(hs17,hs17$N>=800 & hs17$mean_Kd_inverse!=-1)
hsx <- read.csv(paste0("~EREout/chrx.csv"),skip=1)
hsx <-subset(hsx,hsx$N>=800 & hsx$mean_Kd_inverse!=-1)

#read in regions of high binding according to Lin and select desired chromosomes
highchip<-read.csv(paste0("~highchip.csv"))
chip4<-highchip[which(highchip$Chromosome=="chr4"),]
chip12<-highchip[which(highchip$Chromosome=="chr12"),]
chip17<-highchip[which(highchip$Chromosome=="chr17"),]
chipx<-highchip[which(highchip$Chromosome=="chrX"),]

#check to see how many of the peaks match the high ChIP binding
match4_0<-data.frame(Start=numeric(),End=numeric(),Kd_Max=numeric(),Match=factor())
for(i in 1:length(peak4$Start))
	{
	 print(c(i,"4"))
	 peaki<-peak4[i,]
	 for(k in 1:length(chip4$Start))
			{
			 chipk<-chip4[k,]
			 if(peaki$Start>=(chipk$Start-1000) & peaki$Start<=(chipk$Stop+1000))
				{
				 ansk<-"Yes"
				 break
				}else
				{
				 if(peaki$End>=(chipk$Start-1000) & peaki$End<=(chipk$Stop+1000))
					{
					 ansk<-"Yes"
					 break
					}else
					{
					 ansk<-"No"
					}
				}
			}
	 sharepeaki<-data.frame(peaki[,c(1,2,4)],ansk)
	 colnames(sharepeaki)<-c("Start","End","Kd_Max","Match")
	 match4_0<-rbind(match4_0,sharepeaki)
	}
match12_0<-data.frame(Start=numeric(),End=numeric(),Kd_Max=numeric(),Match=factor())
for(i in 1:length(peak12$Start))
	{
	 print(c(i,"12"))
	 peaki<-peak12[i,]
	 for(k in 1:length(chip12$Start))
			{
			 chipk<-chip12[k,]
			 if(peaki$Start>=(chipk$Start-1000) & peaki$Start<=(chipk$Stop+1000))
				{
				 ansk<-"Yes"
				 break
				}else
				{
				 if(peaki$End>=(chipk$Start-1000) & peaki$End<=(chipk$Stop+1000))
					{
					 ansk<-"Yes"
					 break
					}else
					{
					 ansk<-"No"
					}
				}
			}
	 sharepeaki<-data.frame(peaki[,c(1,2,4)],ansk)
	 colnames(sharepeaki)<-c("Start","End","Kd_Max","Match")
	 match12_0<-rbind(match12_0,sharepeaki)
	}
match17_0<-data.frame(Start=numeric(),End=numeric(),Kd_Max=numeric(),Match=factor())
for(i in 1:length(peak17$Start))
	{
	 print(c(i,"17"))
	 peaki<-peak17[i,]
	 for(k in 1:length(chip17$Start))
			{
			 chipk<-chip17[k,]
			 if(peaki$Start>=(chipk$Start-1000) & peaki$Start<=(chipk$Stop+1000))
				{
				 ansk<-"Yes"
				 break
				}else
				{
				 if(peaki$End>=(chipk$Start-1000) & peaki$End<=(chipk$Stop+1000))
					{
					 ansk<-"Yes"
					 break
					}else
					{
					 ansk<-"No"
					}
				}
			}
	 sharepeaki<-data.frame(peaki[,c(1,2,4)],ansk)
	 colnames(sharepeaki)<-c("Start","End","Kd_Max","Match")
	 match17_0<-rbind(match17_0,sharepeaki)
	}
matchx_0<-data.frame(Start=numeric(),End=numeric(),Kd_Max=numeric(),Match=factor())
for(i in 1:length(peakx$Start))
	{
	 print(c(i,"x"))
	 peaki<-peakx[i,]
	 for(k in 1:length(chipx$Start))
			{
			 chipk<-chipx[k,]
			 if(peaki$Start>=(chipk$Start-1000) & peaki$Start<=(chipk$Stop+1000))
				{
				 ansk<-"Yes"
				 break
				}else
				{
				 if(peaki$End>=(chipk$Start-1000) & peaki$End<=(chipk$Stop+1000))
					{
					 ansk<-"Yes"
					 break
					}else
					{
					 ansk<-"No"
					}
				}
			}
	 sharepeaki<-data.frame(peaki[,c(1,2,4)],ansk)
	 colnames(sharepeaki)<-c("Start","End","Kd_Max","Match")
	 matchx_0<-rbind(matchx_0,sharepeaki)
	}

	
table(match4_0$Match)
table(match12_0$Match)
table(match17_0$Match)
table(matchx_0$Match)

#find binding values of the ChIP regions on their own
chval4<-data.frame(genome_position=numeric(),mean_Kd_inverse=numeric(),N_over_1.5=numeric(),N_0.15_to_1.5=numeric(),N_0.09_to_0.15=numeric(),N_0.04_to_0.09=numeric(),Total_over_0.04=numeric())
for(i in 1:length(chip4$Start))
	{
	 chipi<-chip4[i,]
	 chi<-hs4[which(hs4$genome_position>=chipi$Start-1000 & hs4$genome_position<=chipi$Stop+1000),]
	 chvali<-chi[which(chi$mean_Kd_inverse==max(chi$mean_Kd_inverse)),c(1,3:8)]
	 chval4<-rbind(chval4,chvali)
	 }
chval12<-data.frame(genome_position=numeric(),mean_Kd_inverse=numeric(),N_over_1.5=numeric(),N_0.15_to_1.5=numeric(),N_0.09_to_0.15=numeric(),N_0.04_to_0.09=numeric(),Total_over_0.04=numeric())
for(i in 1:length(chip12$Start))
	{
	 chipi<-chip12[i,]
	 chi<-hs12[which(hs12$genome_position>=chipi$Start-1000 & hs12$genome_position<=chipi$Stop+1000),]
	 chvali<-chi[which(chi$mean_Kd_inverse==max(chi$mean_Kd_inverse)),c(1,3:8)]
	 chval12<-rbind(chval12,chvali)
	 }
chval17<-data.frame(genome_position=numeric(),mean_Kd_inverse=numeric(),N_over_1.5=numeric(),N_0.15_to_1.5=numeric(),N_0.09_to_0.15=numeric(),N_0.04_to_0.09=numeric(),Total_over_0.04=numeric())
for(i in 1:length(chip17$Start))
	{
	 chipi<-chip17[i,]
	 chi<-hs17[which(hs17$genome_position>=chipi$Start-1000 & hs17$genome_position<=chipi$Stop+1000),]
	 chvali<-chi[which(chi$mean_Kd_inverse==max(chi$mean_Kd_inverse)),c(1,3:8)]
	 chval17<-rbind(chval17,chvali)
	 }
chvalx<-data.frame(genome_position=numeric(),mean_Kd_inverse=numeric(),N_over_1.5=numeric(),N_0.15_to_1.5=numeric(),N_0.09_to_0.15=numeric(),N_0.04_to_0.09=numeric(),Total_over_0.04=numeric())
for(i in 1:length(chipx$Start))
	{
	 chipi<-chipx[i,]
	 chi<-hsx[which(hsx$genome_position>=chipi$Start-1000 & hsx$genome_position<=chipi$Stop+1000),]
	 chvali<-chi[which(chi$mean_Kd_inverse==max(chi$mean_Kd_inverse)),c(1,3:8)]
	 chvalx<-rbind(chvalx,chvali)
	 }

#estimate the percentile of the binding values of ChIP regions
length(hsx[which(hsx$mean_Kd_inverse>=mean(chvalx$mean_Kd_inverse)),1])/length(hsx[,1])
length(hs17[which(hs17$mean_Kd_inverse>=mean(chval17$mean_Kd_inverse)),1])/length(hs17[,1])
length(hs12[which(hs12$mean_Kd_inverse>=mean(chval12$mean_Kd_inverse)),1])/length(hs12[,1])
length(hs4[which(hs4$mean_Kd_inverse>=mean(chval4$mean_Kd_inverse)),1])/length(hs4[,1])

(length(hsx[which(hsx$mean_Kd_inverse>=mean(chvalx$mean_Kd_inverse)),1])+length(hs17[which(hs17$mean_Kd_inverse>=mean(chval17$mean_Kd_inverse)),1])+length(hs12[which(hs12$mean_Kd_inverse>=mean(chval12$mean_Kd_inverse)),1])+length(hs4[which(hs4$mean_Kd_inverse>=mean(chval4$mean_Kd_inverse)),1]))/(length(hsx[,1])+length(hs4[,1])+length(hs12[,1])+length(hs17[,1]))

#prep for density plot
chval<-rbind(chval12,chval17,chvalx,chval4)
hs<-rbind(hs12,hs17,hsx,hs4)
dens<-density(hs$mean_Kd_inverse)

#plot
library("extrafont")
loadfonts()
postscript("~histplot.eps",family="Arial")
par(family="Arial",mar=c(4,4.5,0,1))
hist(chval$mean_Kd_inverse,freq=FALSE,col="black",breaks=50,xlim=c(0.002,0.005),ylim=c(0,3250),xlab=expression(paste("Mean Kd"^"-1")),ylab="Density",main="",cex.lab=2,cex.axis=1.5)
par(new=TRUE)
plot(dens$x,length(data)*dens$y,type="l",lwd=3,xlim=c(0.002,0.005),ylim=c(0,3250),axes=FALSE,xlab="",ylab="")
par(new=TRUE)
plot(dens$x[which(dens$x>=0.00268 & dens$x<=0.0033)],dens$y[which(dens$x>=0.00268 & dens$x<=0.0033)],type="l",lwd=3,xlim=c(0.002,0.005),col="white",ylim=c(0,3250),ylab="",xlab="",axes=FALSE)
dev.off()