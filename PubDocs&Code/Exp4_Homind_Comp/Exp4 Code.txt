#read in human gff and pull genes
gene <- read.delim("~hs_gff.gff", header=F, comment.char="#")
gene<-gene[c(grep("NC_",gene[,1])),]
gene<-subset(gene,gene[,3]=="gene")
gene<-subset(gene,gene[,1]!="NC_012920.1")
Chr<-droplevels(gene[,1])
gene<-data.frame(Chr,gene[,3],gene[,4],gene[,5],gene[,7],gene[,9])
gene<-data.frame(gene[,1],gene[,3:6])
colnames(gene)<-c("Chromosome","Start","Stop","GeneDirection","Info")
levels(gene[,1])<-c(1:length(levels(gene[,1])))
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "23") "X" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "24") "Y" else y })
gene$Chromosome<-as.factor(gene$Chromosome)
name<-vector(mode="character")
for(i in 1:length(gene$Info))
 {
     rowi<-gene$Info[i]
     namei<-substr(rowi,regexpr("gene=",rowi)[1]+5,regexpr(";gene_",rowi)[1]-1)
     name<-append(name,namei)
 }
hs_gene<-data.frame("Homo_sapiens",name,gene)
colnames(hs_gene)<-c("Species","Name","Chromosome","Start","Stop","GeneDirection","Info")
rm(gene) 
#read in estrogen genes from Bourdeau 2004 (er1) and Lin 2007 (er2)
er1 <- read.csv("~estroresponse.csv")
er2 <- read.csv("~newestro.csv")
er1$estroresponse<-as.factor(er1$estroresponse)
er2$estroresponse<-as.factor(er2$estroresponse)
er_all<-rbind(er1,er2)

#subset ER genes from human gff
ERhs<-hs_gene[which(hs_gene$Name %in% er_all$estroresponse),]

gene <- read.delim("~gg_gff.gff", header=F, comment.char="#")
gene<-gene[c(grep("NC_",gene[,1])),]
gene<-subset(gene,gene[,3]=="gene")
gene<-subset(gene,gene[,1]!="NC_011120.1")
Chr<-droplevels(gene[,1])
gene<-data.frame(Chr,gene[,3],gene[,4],gene[,5],gene[,7],gene[,9])
gene<-data.frame(gene[,1],gene[,3:6])
colnames(gene)<-c("Chromosome","Start","Stop","GeneDirection","Info")
levels(gene[,1])<-c(1:length(levels(gene[,1])))
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "2") "2a" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "3") "2b" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "4") "3" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "5") "4" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "6") "5" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "7") "6" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "8") "7" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "9") "8" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "10") "9" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "11") "10" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "12") "11" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "13") "12" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "14") "13" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "15") "14" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "16") "15" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "17") "16" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "18") "17" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "19") "18" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "20") "19" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "21") "20" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "22") "21" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "23") "22" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "24") "X" else y })
gene$Chromosome<-as.factor(gene$Chromosome)
name<-vector(mode="character")
for(i in 1:length(gene$Info))
{
    rowi<-gene$Info[i]
    namei<-substr(rowi,regexpr("gene=",rowi)[1]+5,regexpr(";gene_",rowi)[1]-1)
    name<-append(name,namei)
}
gg_gene<-data.frame("Gorilla_gorilla",name,gene)
colnames(gg_gene)<-c("Species","Name","Chromosome","Start","Stop","GeneDirection","Info")
ERgg<-gg_gene[which(gg_gene$Name %in% er_all$estroresponse),]

gene <- read.delim("~pt_gff.gff", header=F, comment.char="#")
gene<-gene[c(grep("NC_",gene[,1])),]
gene<-subset(gene,gene[,3]=="gene")
gene<-subset(gene,gene[,1]!="NC_001643.1")
Chr<-droplevels(gene[,1])
gene<-data.frame(Chr,gene[,3],gene[,4],gene[,5],gene[,7],gene[,9])
gene<-data.frame(gene[,1],gene[,3:6])
colnames(gene)<-c("Chromosome","Start","Stop","GeneDirection","Info")
levels(gene[,1])<-c(1:length(levels(gene[,1])))
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "2") "2a" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "3") "2b" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "4") "3" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "5") "4" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "6") "5" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "7") "6" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "8") "7" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "9") "8" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "10") "9" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "11") "10" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "12") "11" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "13") "12" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "14") "13" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "15") "14" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "16") "15" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "17") "16" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "18") "17" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "19") "18" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "20") "19" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "21") "20" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "22") "21" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "23") "22" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "24") "X" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "25") "Y" else y })
gene$Chromosome<-as.factor(gene$Chromosome)
name<-vector(mode="character")
for(i in 1:length(gene$Info))
{
    rowi<-gene$Info[i]
    namei<-substr(rowi,regexpr("gene=",rowi)[1]+5,regexpr(";gene_",rowi)[1]-1)
    name<-append(name,namei)
}
pt_gene<-data.frame("Pan_troglodytes",name,gene)
colnames(pt_gene)<-c("Species","Name","Chromosome","Start","Stop","GeneDirection","Info")
ERpt<-pt_gene[which(pt_gene$Name %in% er_all$estroresponse),]
gene <- read.delim("~pp_gff.gff", header=F, comment.char="#")
gene<-gene[c(grep("NC_",gene[,1])),]
gene<-subset(gene,gene[,3]=="gene")
gene<-subset(gene,gene[,1]!="NC_0051644.1")
Chr<-droplevels(gene[,1])
gene<-data.frame(Chr,gene[,3],gene[,4],gene[,5],gene[,7],gene[,9])
gene<-data.frame(gene[,1],gene[,3:6])
colnames(gene)<-c("Chromosome","Start","Stop","GeneDirection","Info")
levels(gene[,1])<-c(1:length(levels(gene[,1])))
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "2") "2a" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "3") "2b" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "4") "3" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "5") "4" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "6") "5" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "7") "6" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "8") "7" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "9") "8" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "10") "9" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "11") "10" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "12") "11" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "13") "12" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "14") "13" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "15") "14" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "16") "15" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "17") "16" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "18") "17" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "19") "18" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "20") "19" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "21") "20" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "22") "21" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "23") "22" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "24") "X" else y })
gene$Chromosome<-as.factor(gene$Chromosome)
gene$Chromosome<-as.factor(gene$Chromosome)
name<-vector(mode="character")
for(i in 1:length(gene$Info))
{
    rowi<-gene$Info[i]
    namei<-substr(rowi,regexpr("gene=",rowi)[1]+5,regexpr(";gene_",rowi)[1]-1)
    name<-append(name,namei)
}
pp_gene<-data.frame("Pan_paniscus",name,gene)
colnames(pp_gene)<-c("Species","Name","Chromosome","Start","Stop","GeneDirection","Info")
ERpp<-pp_gene[which(pp_gene$Name %in% er_all$estroresponse),]
gene <- read.delim("~pa_gff.gff", header=F, comment.char="#")
gene<-gene[c(grep("NC_",gene[,1])),]
gene<-subset(gene,gene[,3]=="gene")
gene<-subset(gene,gene[,1]!="NC_002083.1")
Chr<-droplevels(gene[,1])
gene<-data.frame(Chr,gene[,3],gene[,4],gene[,5],gene[,7],gene[,9])
gene<-data.frame(gene[,1],gene[,3:6])
colnames(gene)<-c("Chromosome","Start","Stop","GeneDirection","Info")
levels(gene[,1])<-c(1:length(levels(gene[,1])))
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "2") "2a" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "3") "2b" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "4") "3" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "5") "4" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "6") "5" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "7") "6" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "8") "7" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "9") "8" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "10") "9" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "11") "10" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "12") "11" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "13") "12" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "14") "13" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "15") "14" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "16") "15" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "17") "16" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "18") "17" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "19") "18" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "20") "19" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "21") "20" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "22") "21" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "23") "22" else y })
gene$Chromosome <- sapply(gene$Chromosome, function(y) { if (y == "24") "X" else y })
gene$Chromosome<-as.factor(gene$Chromosome)
name<-vector(mode="character")
for(i in 1:length(gene$Info))
{
    rowi<-gene$Info[i]
    namei<-substr(rowi,regexpr("gene=",rowi)[1]+5,regexpr(";gene_",rowi)[1]-1)
    name<-append(name,namei)
}
pa_gene<-data.frame("Pongo_abelii",name,gene)
colnames(pa_gene)<-c("Species","Name","Chromosome","Start","Stop","GeneDirection","Info")
ERpa<-pa_gene[which(pa_gene$Name %in% er_all$estroresponse),]

#find shared genes with which command
#subset the four chromosomes of interest
#pongo had multiple entries of same name, removed those from all species list
#gorilla 17 is composed of chr5 and chr17 merged those two then used which vs human to select relevent genes
#double check that 50 genes are shared by all species

list<-list.files(paste0("~ggor/"))
ggpeak<-data.frame(Start=numeric(),End=numeric(),Kd_Zenith=numeric(),Kd_Max=numeric(),ERE=numeric(),Mis_Max1=numeric(),Mis2_Max=numeric(),Mis3_Max=numeric(),Half=numeric(),Chromosome=factor())
gch<-as.factor(c("12","17","4","5","X"))
for(i in 1:length(list))
	{
	 ERFindk <- read.csv(paste0("~ggor/",list[i]),skip=1)
	 ERFindk <-subset(ERFindk,ERFindk$N>=800 & ERFindk$mean_Kd_inverse!=-1)
	 peak<-peaksnew(ERFindk,0.003,500,1000)
	 peak$Chromosome<-as.factor(gch[i])
	 ggpeak<-rbind(ggpeak,peak)
	 }
ggpair<-pairPeak(ggpeak,ERgor,50000,-100000)
list<-list.files(paste0("~hsap/"))
hspeak<-data.frame(Start=numeric(),End=numeric(),Kd_Zenith=numeric(),Kd_Max=numeric(),ERE=numeric(),Mis_Max1=numeric(),Mis2_Max=numeric(),Mis3_Max=numeric(),Half=numeric(),Chromosome=factor())
hch<-as.factor(c("12","17","4","X"))
for(i in 1:length(list))
	{
	 ERFindk <- read.csv(paste0("~hsap/",list[i]),skip=1)
	 ERFindk <-subset(ERFindk,ERFindk$N>=800 & ERFindk$mean_Kd_inverse!=-1)
	 peak<-peaksnew(ERFindk,0.003,500,1000)
	 peak$Chromosome<-as.factor(hch[i])
	 hspeak<-rbind(hspeak,peak)
	 }
hspair<-pairPeak(hspeak,ERhum,50000,-100000)
list<-list.files(paste0("~pabe/"))
papeak<-data.frame(Start=numeric(),End=numeric(),Kd_Zenith=numeric(),Kd_Max=numeric(),ERE=numeric(),Mis_Max1=numeric(),Mis2_Max=numeric(),Mis3_Max=numeric(),Half=numeric(),Chromosome=factor())
for(i in 1:length(list))
	{
	 ERFindk <- read.csv(paste0("~pabe/",list[i]),skip=1)
	 ERFindk <-subset(ERFindk,ERFindk$N>=800 & ERFindk$mean_Kd_inverse!=-1)
	 peak<-peaksnew(ERFindk,0.003,500,1000)
	 peak$Chromosome<-as.factor(hch[i])
	 papeak<-rbind(papeak,peak)
	 }
papair<-pairPeak(papeak,ERora,50000,-100000)
list<-list.files(paste0("~ppan/"))
pppeak<-data.frame(Start=numeric(),End=numeric(),Kd_Zenith=numeric(),Kd_Max=numeric(),ERE=numeric(),Mis_Max1=numeric(),Mis2_Max=numeric(),Mis3_Max=numeric(),Half=numeric(),Chromosome=factor())
for(i in 1:length(list))
	{
	 ERFindk <- read.csv(paste0("~ppan/",list[i]),skip=1)
	 ERFindk <-subset(ERFindk,ERFindk$N>=800 & ERFindk$mean_Kd_inverse!=-1)
	 peak<-peaksnew(ERFindk,0.003,500,1000)
	 peak$Chromosome<-as.factor(hch[i])
	 pppeak<-rbind(pppeak,peak)
	 }
pppair<-pairPeak(pppeak,ERbon,50000,-100000)
list<-list.files(paste0("~ptro/"))
ptpeak<-data.frame(Start=numeric(),End=numeric(),Kd_Zenith=numeric(),Kd_Max=numeric(),ERE=numeric(),Mis_Max1=numeric(),Mis2_Max=numeric(),Mis3_Max=numeric(),Half=numeric(),Chromosome=factor())
for(i in 1:length(list))
	{
	 ERFindk <- read.csv(paste0("~ptro/",list[i]),skip=1)
	 ERFindk <-subset(ERFindk,ERFindk$N>=800 & ERFindk$mean_Kd_inverse!=-1)
	 peak<-peaksnew(ERFindk,0.003,500,1000)
	 peak$Chromosome<-as.factor(hch[i])
	 ptpeak<-rbind(ptpeak,peak)
	 }
ptpair<-pairPeak(ptpeak,ERchi,50000,-100000)

#read in allpair and subset to use pdlim3 gene
pair<-read.csv("~allpair.csv")
pdlim3<-subset(pair,pair$Gene=="PDLIM3")

#read in full scan data to use for genome position data
hs4 <- read.csv(paste0("~hsap/chr4.csv"),skip=1)
pa4 <- read.csv(paste0("~pabe/chr4.csv"),skip=1)
pp4 <- read.csv(paste0("~ppan/chr4.csv"),skip=1)
pt4 <- read.csv(paste0("~ptro/chr4.csv"),skip=1)
gg4 <- read.csv(paste0("~ggor/chr4.csv"),skip=1)

#prep for image
library("extrafont")
loadfonts()
#subset from up and down of gene--note gene is negative orientation
ggp<-gg4[which(gg4$genome_position>=(198386080-50000) & gg4$genome_position<=(198419791+50000)),]
hsp<-hs4[which(hs4$genome_position>=(185500660-50000) & hs4$genome_position<=(185535606+50000)),]
pap<-pa4[which(pa4$genome_position>=(193764595-50000) & pa4$genome_position<=(193798439+50000)),]
ppp<-pp4[which(pp4$genome_position>=(189880930-50000) & pp4$genome_position<=(189914707+50000)),]
ptp<-pt4[which(pt4$genome_position>=(189849407-50000) & pt4$genome_position<=(189883207+50000)),]
postscript("~pdlim3.eps")
par(mar=c(5,3,2,2))
#center plot on human gene size
plot(x=hsp$genome_position-hsp$genome_position[1],y=hsp$mean_Kd_inverse,ylim=c(0,6),col="white",xlab="",ylab="",yaxt='n',axes=F,main="PDLIM3",cex.main=3.5,font=2)
axis(side=2,at=c(5.5,4.25,3,1.75,0.5),labels=c("O","G","H","B","C"),tick=FALSE,las=1,font=2,cex.axis=3)
axis(side=1,at=c(0,50000,185535606-hsp$genome_position[1],max(hsp$genome_position)-hsp$genome_position[1]),labels=c("-50KB","End","Start","+50KB"),font=2,cex.axis=2.5,lwd=4)
#draw gene as box from pdlim3 info
rect(pdlim3$GeneStop[which(pdlim3$Species=="Pan_troglodytes")]-ptp$genome_position[1],0,pdlim3$GeneStart[which(pdlim3$Species=="Pan_troglodytes")]-ptp$genome_position[1],1,col="gray78",border=FALSE)
#draw peaks as box
rect(pdlim3$peakStart[which(pdlim3$Species=="Pan_troglodytes")]-ptp$genome_position[1],0,pdlim3$peakStop[which(pdlim3$Species=="Pan_troglodytes")]-ptp$genome_position[1],1,col="black")
#bisect line running full length
abline(h=0.5,lty=2)
#add arrow to indicate gene direction
arrows(x1=pdlim3$GeneStop[which(pdlim3$Species=="Pan_troglodytes")]-ptp$genome_position[1],x0=pdlim3$GeneStart[which(pdlim3$Species=="Pan_troglodytes")]-ptp$genome_position[1],y0=.5,lty=1,lwd=4)

#rinse and repeat for remaining species
rect(pdlim3$GeneStop[which(pdlim3$Species=="Pan_paniscus")]-ppp$genome_position[1],1.25,pdlim3$GeneStart[which(pdlim3$Species=="Pan_paniscus")]-ppp$genome_position[1],2.25,col="gray78",border=FALSE)
rect(pdlim3$peakStart[which(pdlim3$Species=="Pan_paniscus")]-ppp$genome_position[1],1.25,pdlim3$peakStop[which(pdlim3$Species=="Pan_paniscus")]-ppp$genome_position[1],2.25,col="black")
abline(h=1.75,lty=2)
arrows(x1=pdlim3$GeneStop[which(pdlim3$Species=="Pan_paniscus")]-ppp$genome_position[1],x0=pdlim3$GeneStart[which(pdlim3$Species=="Pan_paniscus")]-ppp$genome_position[1],y0=1.75,lty=1,lwd=4)
rect(pdlim3$GeneStop[which(pdlim3$Species=="Homo_sapiens")]-hsp$genome_position[1],2.5,pdlim3$GeneStart[which(pdlim3$Species=="Homo_sapiens")]-hsp$genome_position[1],3.5,col="gray78",border=FALSE)
rect(pdlim3$peakStart[which(pdlim3$Species=="Homo_sapiens")]-hsp$genome_position[1],2.5,pdlim3$peakStop[which(pdlim3$Species=="Homo_sapiens")]-hsp$genome_position[1],3.5,col="black")
abline(h=3,lty=2)
arrows(x1=pdlim3$GeneStop[which(pdlim3$Species=="Homo_sapiens")]-hsp$genome_position[1],x0=pdlim3$GeneStart[which(pdlim3$Species=="Homo_sapiens")]-hsp$genome_position[1],y0=3,lty=1,lwd=4)
rect(pdlim3$GeneStop[which(pdlim3$Species=="Gorilla_gorilla")]-ggp$genome_position[1],3.75,pdlim3$GeneStart[which(pdlim3$Species=="Gorilla_gorilla")]-ggp$genome_position[1],4.75,col="gray78",border=FALSE)
rect(pdlim3$peakStart[which(pdlim3$Species=="Gorilla_gorilla")]-ggp$genome_position[1],3.75,pdlim3$peakStop[which(pdlim3$Species=="Gorilla_gorilla")]-ggp$genome_position[1],4.75,col="black")
abline(h=4.25,lty=2)
arrows(x1=pdlim3$GeneStop[which(pdlim3$Species=="Gorilla_gorilla")]-ggp$genome_position[1],x0=pdlim3$GeneStart[which(pdlim3$Species=="Gorilla_gorilla")]-ggp$genome_position[1],y0=4.25,lty=1,lwd=4)
rect(pdlim3$GeneStop[which(pdlim3$Species=="Pongo_abelii")]-pap$genome_position[1],5,pdlim3$GeneStart[which(pdlim3$Species=="Pongo_abelii")]-pap$genome_position[1],6,col="gray78",border=FALSE)
rect(pdlim3$peakStart[which(pdlim3$Species=="Pongo_abelii")]-pap$genome_position[1],5,pdlim3$peakStop[which(pdlim3$Species=="Pongo_abelii")]-pap$genome_position[1],6,col="black")
abline(h=5.5,lty=2)
arrows(x1=pdlim3$GeneStop[which(pdlim3$Species=="Pongo_abelii")]-pap$genome_position[1],x0=pdlim3$GeneStart[which(pdlim3$Species=="Pongo_abelii")]-pap$genome_position[1],y0=5.5,lty=1,lwd=4)
dev.off()

#import allpair and look at pdlim3 to subset fasta files
pair<-read.csv("~allpair.csv")
pdlim3<-subset(pair,pair$Gene=="PDLIM3")

#grab the sequence 50kb upstream from gene TSS
library(Biostrings)
library(seqinr)
oup<-DNAString(c2s(read.fasta("~pabe/chr4.fasta")[[1]]),start=1,nchar=NA)[193798439:193848439]
gup<-DNAString(c2s(read.fasta("~ggor/chr4.fasta")[[1]]),start=1,nchar=NA)[198419791:198469791]
hup<-DNAString(c2s(read.fasta("~hsap/chr4.fasta")[[1]]),start=1,nchar=NA)[185535606:185585606]
bup<-DNAString(c2s(read.fasta("~ppan/chr4.fasta")[[1]]),start=1,nchar=NA)[189914707:189964707]
cup<-DNAString(c2s(read.fasta("~ptro/chr4.fasta")[[1]]),start=1,nchar=NA)[189883207:189933207]

#put sequences in one fasta file to give to MAFFT to align
plim<-DNAStringSet(c(as.character(oup),as.character(gup),as.character(hup),as.character(bup),as.character(cup)))
names(plim)<-c("P_abelii","G_gorilla","H_sapiens","P_paniscus","P_troglodytes")
writeXStringSet(plim,"~pdlim3.fasta",format="fasta")

#alignment file rescanned though EREFinder to use each bp estimate
#read in that output and put into one table
orabp<-scan("~bpscore/_ERE_values.txt",what=numeric(),skip=1,sep=",",nlines=1)
gorbp<-scan("~bpscore/_ERE_values.txt",what=numeric(),skip=3,sep=",",nlines=1)
humbp<-scan("~bpscore/_ERE_values.txt",what=numeric(),skip=5,sep=",",nlines=1)
bonbp<-scan("~bpscore/_ERE_values.txt",what=numeric(),skip=7,sep=",",nlines=1)
chibp<-scan("~bpscore/_ERE_values.txt",what=numeric(),skip=9,sep=",",nlines=1)
bpscore<-data.frame(c(1:56612),orabp,gorbp,humbp,bonbp,chibp)
colnames(bpscore)<-c("position","P_abelii","G_gorilla","H_sapiens","P_paniscus","P_troglodytes")

#search for regions that have the high values (should ~ be in general area of peak distance from gene)
highscore<-subset(bpscore,bpscore$H_sapiens>=0.015)

#read in aligned fasta and select a small sequence to show conservation of site
pdalign<-readDNAStringSet("~pdlim3align.fasta","fasta")
interestingcut<-subseq(pdalign,start=3201,end=3400)
writeXStringSet(interestingcut,"~cut.fasta",format="fasta")